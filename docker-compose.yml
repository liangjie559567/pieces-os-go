version: '3.8'

services:
  pieces-os:
    image: wisdgod/pieces-os-go:latest
    container_name: pieces-os
    restart: unless-stopped
    ports:
      - "${PORT:-8787}:8787"
    environment:
      - TZ=Asia/Shanghai
      - PORT=8787
      - API_PREFIX=${API_PREFIX:-/v1/}
      - MIN_POOL_SIZE=${MIN_POOL_SIZE:-5}
      - MAX_POOL_SIZE=${MAX_POOL_SIZE:-20}
      - SCALE_INTERVAL=${SCALE_INTERVAL:-30}
      - API_KEY=${API_KEY}
      - DEBUG=${DEBUG:-false}
      - LOG_FILE=/app/logs/pieces-os.log
      - DEFAULT_MODEL=${DEFAULT_MODEL:-}
      - MAX_RETRIES=${MAX_RETRIES:-3}
      - TIMEOUT=${TIMEOUT:-30}
      - ENABLE_MODEL_ROUTE=${ENABLE_MODEL_ROUTE:-false}
      - ENABLE_FOOLPROOF_ROUTE=${ENABLE_FOOLPROOF_ROUTE:-false}
    volumes:
      - pieces_logs:/app/logs
    networks:
      - pieces-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8787/ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
        reservations:
          cpus: '0.25'
          memory: 256M
    security_opt:
      - no-new-privileges:true
      - seccomp=unconfined  # 如果需要更好的系统调用隔离
    read_only: true        # 使容器根文件系统只读
    tmpfs:                 # 为需要写入的临时文件提供 tmpfs
      - /tmp:rw,noexec,nosuid,size=100m  # 限制临时文件系统大小
    cap_drop:             # 删除不需要的 Linux 功能
      - ALL
    cap_add:              # 只添加必要的功能
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

networks:
  pieces-network:
    driver: bridge
    name: pieces-network
    ipam:
      driver: default
      config:
        - subnet: 172.20.0.0/16

volumes:
  pieces_logs:
    name: pieces_logs