// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v5.28.3
// source: pkg/proto/vertex/vertex.proto

package vertex

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Global
type Messages struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Unknown int64  `protobuf:"varint,1,opt,name=unknown,proto3" json:"unknown,omitempty"` // possibly constant 1(request)/3(response)
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`  // message content
}

func (x *Messages) Reset() {
	*x = Messages{}
	mi := &file_pkg_proto_vertex_vertex_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Messages) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Messages) ProtoMessage() {}

func (x *Messages) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_vertex_vertex_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Messages.ProtoReflect.Descriptor instead.
func (*Messages) Descriptor() ([]byte, []int) {
	return file_pkg_proto_vertex_vertex_proto_rawDescGZIP(), []int{0}
}

func (x *Messages) GetUnknown() int64 {
	if x != nil {
		return x.Unknown
	}
	return 0
}

func (x *Messages) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Requests
type Requests struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Models string `protobuf:"bytes,1,opt,name=models,proto3" json:"models,omitempty"` // model name
	Args   *Args  `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty"`
}

func (x *Requests) Reset() {
	*x = Requests{}
	mi := &file_pkg_proto_vertex_vertex_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Requests) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Requests) ProtoMessage() {}

func (x *Requests) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_vertex_vertex_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Requests.ProtoReflect.Descriptor instead.
func (*Requests) Descriptor() ([]byte, []int) {
	return file_pkg_proto_vertex_vertex_proto_rawDescGZIP(), []int{1}
}

func (x *Requests) GetModels() string {
	if x != nil {
		return x.Models
	}
	return ""
}

func (x *Requests) GetArgs() *Args {
	if x != nil {
		return x.Args
	}
	return nil
}

type Args struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Messages *Messages `protobuf:"bytes,2,opt,name=messages,proto3" json:"messages,omitempty"` // message, can be treated as user message
	Rules    string    `protobuf:"bytes,3,opt,name=rules,proto3" json:"rules,omitempty"`       // rules, can be treated as system message
}

func (x *Args) Reset() {
	*x = Args{}
	mi := &file_pkg_proto_vertex_vertex_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Args) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Args) ProtoMessage() {}

func (x *Args) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_vertex_vertex_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Args.ProtoReflect.Descriptor instead.
func (*Args) Descriptor() ([]byte, []int) {
	return file_pkg_proto_vertex_vertex_proto_rawDescGZIP(), []int{2}
}

func (x *Args) GetMessages() *Messages {
	if x != nil {
		return x.Messages
	}
	return nil
}

func (x *Args) GetRules() string {
	if x != nil {
		return x.Rules
	}
	return ""
}

// Response
type Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseCode int64  `protobuf:"varint,2,opt,name=response_code,json=responseCode,proto3" json:"response_code,omitempty"` // response status code: 200, 439, etc
	Args         *Args1 `protobuf:"bytes,4,opt,name=args,proto3" json:"args,omitempty"`
}

func (x *Response) Reset() {
	*x = Response{}
	mi := &file_pkg_proto_vertex_vertex_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_vertex_vertex_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_pkg_proto_vertex_vertex_proto_rawDescGZIP(), []int{3}
}

func (x *Response) GetResponseCode() int64 {
	if x != nil {
		return x.ResponseCode
	}
	return 0
}

func (x *Response) GetArgs() *Args1 {
	if x != nil {
		return x.Args
	}
	return nil
}

type Args1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Args *Args2 `protobuf:"bytes,1,opt,name=args,proto3" json:"args,omitempty"`
}

func (x *Args1) Reset() {
	*x = Args1{}
	mi := &file_pkg_proto_vertex_vertex_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Args1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Args1) ProtoMessage() {}

func (x *Args1) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_vertex_vertex_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Args1.ProtoReflect.Descriptor instead.
func (*Args1) Descriptor() ([]byte, []int) {
	return file_pkg_proto_vertex_vertex_proto_rawDescGZIP(), []int{4}
}

func (x *Args1) GetArgs() *Args2 {
	if x != nil {
		return x.Args
	}
	return nil
}

type Args2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Args *Messages `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty"`
}

func (x *Args2) Reset() {
	*x = Args2{}
	mi := &file_pkg_proto_vertex_vertex_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Args2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Args2) ProtoMessage() {}

func (x *Args2) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_vertex_vertex_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Args2.ProtoReflect.Descriptor instead.
func (*Args2) Descriptor() ([]byte, []int) {
	return file_pkg_proto_vertex_vertex_proto_rawDescGZIP(), []int{5}
}

func (x *Args2) GetArgs() *Messages {
	if x != nil {
		return x.Args
	}
	return nil
}

var File_pkg_proto_vertex_vertex_proto protoreflect.FileDescriptor

var file_pkg_proto_vertex_vertex_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x65, 0x72, 0x74,
	0x65, 0x78, 0x2f, 0x76, 0x65, 0x72, 0x74, 0x65, 0x78, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x2b, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x6f, 0x74, 0x2e, 0x6d, 0x61, 0x63,
	0x68, 0x69, 0x6e, 0x65, 0x5f, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x65, 0x78, 0x22, 0x3e, 0x0a, 0x08,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x6e, 0x6b, 0x6e,
	0x6f, 0x77, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x75, 0x6e, 0x6b, 0x6e, 0x6f,
	0x77, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x69, 0x0a, 0x08,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73,
	0x12, 0x45, 0x0a, 0x04, 0x61, 0x72, 0x67, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31,
	0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x6f, 0x74, 0x2e, 0x6d, 0x61, 0x63,
	0x68, 0x69, 0x6e, 0x65, 0x5f, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x65, 0x78, 0x2e, 0x41, 0x72, 0x67,
	0x73, 0x52, 0x04, 0x61, 0x72, 0x67, 0x73, 0x22, 0x75, 0x0a, 0x04, 0x41, 0x72, 0x67, 0x73, 0x12,
	0x51, 0x0a, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x35, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x6f, 0x74, 0x2e,
	0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x5f, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67,
	0x2e, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x65, 0x78, 0x2e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x4a, 0x04, 0x08, 0x01, 0x10, 0x02, 0x22, 0x77,
	0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x46, 0x0a, 0x04, 0x61, 0x72, 0x67, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e,
	0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x6f, 0x74, 0x2e, 0x6d, 0x61, 0x63, 0x68,
	0x69, 0x6e, 0x65, 0x5f, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x61, 0x72,
	0x65, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x65, 0x78, 0x2e, 0x41, 0x72, 0x67, 0x73,
	0x31, 0x52, 0x04, 0x61, 0x72, 0x67, 0x73, 0x22, 0x4f, 0x0a, 0x05, 0x41, 0x72, 0x67, 0x73, 0x31,
	0x12, 0x46, 0x0a, 0x04, 0x61, 0x72, 0x67, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32,
	0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x6f, 0x74, 0x2e, 0x6d, 0x61, 0x63,
	0x68, 0x69, 0x6e, 0x65, 0x5f, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x65, 0x78, 0x2e, 0x41, 0x72, 0x67,
	0x73, 0x32, 0x52, 0x04, 0x61, 0x72, 0x67, 0x73, 0x22, 0x52, 0x0a, 0x05, 0x41, 0x72, 0x67, 0x73,
	0x32, 0x12, 0x49, 0x0a, 0x04, 0x61, 0x72, 0x67, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x35, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x6f, 0x74, 0x2e, 0x6d, 0x61,
	0x63, 0x68, 0x69, 0x6e, 0x65, 0x5f, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x65, 0x78, 0x2e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x04, 0x61, 0x72, 0x67, 0x73, 0x32, 0x97, 0x02, 0x0a,
	0x16, 0x56, 0x65, 0x72, 0x74, 0x65, 0x78, 0x49, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x77, 0x0a, 0x07, 0x50, 0x72, 0x65, 0x64, 0x69,
	0x63, 0x74, 0x12, 0x35, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x6f, 0x74,
	0x2e, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x5f, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e,
	0x67, 0x2e, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x65, 0x78,
	0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x1a, 0x35, 0x2e, 0x72, 0x75, 0x6e, 0x74,
	0x69, 0x6d, 0x65, 0x2e, 0x61, 0x6f, 0x74, 0x2e, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x5f,
	0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x73,
	0x2e, 0x76, 0x65, 0x72, 0x74, 0x65, 0x78, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x83, 0x01, 0x0a, 0x11, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x57, 0x69, 0x74, 0x68,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x35, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65,
	0x2e, 0x61, 0x6f, 0x74, 0x2e, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x5f, 0x6c, 0x65, 0x61,
	0x72, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x65,
	0x72, 0x74, 0x65, 0x78, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x1a, 0x35, 0x2e,
	0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x6f, 0x74, 0x2e, 0x6d, 0x61, 0x63, 0x68,
	0x69, 0x6e, 0x65, 0x5f, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x61, 0x72,
	0x65, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x65, 0x78, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x30, 0x01, 0x42, 0x12, 0x5a, 0x10, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x65, 0x72, 0x74, 0x65, 0x78, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_pkg_proto_vertex_vertex_proto_rawDescOnce sync.Once
	file_pkg_proto_vertex_vertex_proto_rawDescData = file_pkg_proto_vertex_vertex_proto_rawDesc
)

func file_pkg_proto_vertex_vertex_proto_rawDescGZIP() []byte {
	file_pkg_proto_vertex_vertex_proto_rawDescOnce.Do(func() {
		file_pkg_proto_vertex_vertex_proto_rawDescData = protoimpl.X.CompressGZIP(file_pkg_proto_vertex_vertex_proto_rawDescData)
	})
	return file_pkg_proto_vertex_vertex_proto_rawDescData
}

var file_pkg_proto_vertex_vertex_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_pkg_proto_vertex_vertex_proto_goTypes = []any{
	(*Messages)(nil), // 0: runtime.aot.machine_learning.parents.vertex.Messages
	(*Requests)(nil), // 1: runtime.aot.machine_learning.parents.vertex.Requests
	(*Args)(nil),     // 2: runtime.aot.machine_learning.parents.vertex.Args
	(*Response)(nil), // 3: runtime.aot.machine_learning.parents.vertex.Response
	(*Args1)(nil),    // 4: runtime.aot.machine_learning.parents.vertex.Args1
	(*Args2)(nil),    // 5: runtime.aot.machine_learning.parents.vertex.Args2
}
var file_pkg_proto_vertex_vertex_proto_depIdxs = []int32{
	2, // 0: runtime.aot.machine_learning.parents.vertex.Requests.args:type_name -> runtime.aot.machine_learning.parents.vertex.Args
	0, // 1: runtime.aot.machine_learning.parents.vertex.Args.messages:type_name -> runtime.aot.machine_learning.parents.vertex.Messages
	4, // 2: runtime.aot.machine_learning.parents.vertex.Response.args:type_name -> runtime.aot.machine_learning.parents.vertex.Args1
	5, // 3: runtime.aot.machine_learning.parents.vertex.Args1.args:type_name -> runtime.aot.machine_learning.parents.vertex.Args2
	0, // 4: runtime.aot.machine_learning.parents.vertex.Args2.args:type_name -> runtime.aot.machine_learning.parents.vertex.Messages
	1, // 5: runtime.aot.machine_learning.parents.vertex.VertexInferenceService.Predict:input_type -> runtime.aot.machine_learning.parents.vertex.Requests
	1, // 6: runtime.aot.machine_learning.parents.vertex.VertexInferenceService.PredictWithStream:input_type -> runtime.aot.machine_learning.parents.vertex.Requests
	3, // 7: runtime.aot.machine_learning.parents.vertex.VertexInferenceService.Predict:output_type -> runtime.aot.machine_learning.parents.vertex.Response
	3, // 8: runtime.aot.machine_learning.parents.vertex.VertexInferenceService.PredictWithStream:output_type -> runtime.aot.machine_learning.parents.vertex.Response
	7, // [7:9] is the sub-list for method output_type
	5, // [5:7] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_pkg_proto_vertex_vertex_proto_init() }
func file_pkg_proto_vertex_vertex_proto_init() {
	if File_pkg_proto_vertex_vertex_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pkg_proto_vertex_vertex_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pkg_proto_vertex_vertex_proto_goTypes,
		DependencyIndexes: file_pkg_proto_vertex_vertex_proto_depIdxs,
		MessageInfos:      file_pkg_proto_vertex_vertex_proto_msgTypes,
	}.Build()
	File_pkg_proto_vertex_vertex_proto = out.File
	file_pkg_proto_vertex_vertex_proto_rawDesc = nil
	file_pkg_proto_vertex_vertex_proto_goTypes = nil
	file_pkg_proto_vertex_vertex_proto_depIdxs = nil
}
