// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v5.28.3
// source: pkg/proto/gpt/gpt.proto

package gpt

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Global
type Message struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Role    uint64 `protobuf:"varint,1,opt,name=role,proto3" json:"role,omitempty"` // value 0 for system, 1 for user/assistant
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *Message) Reset() {
	*x = Message{}
	mi := &file_pkg_proto_gpt_gpt_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_gpt_gpt_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_pkg_proto_gpt_gpt_proto_rawDescGZIP(), []int{0}
}

func (x *Message) GetRole() uint64 {
	if x != nil {
		return x.Role
	}
	return 0
}

func (x *Message) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Requests
type Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Models      string     `protobuf:"bytes,1,opt,name=models,proto3" json:"models,omitempty"`             // model name
	Messages    []*Message `protobuf:"bytes,2,rep,name=messages,proto3" json:"messages,omitempty"`         // message list
	Temperature float64    `protobuf:"fixed64,3,opt,name=temperature,proto3" json:"temperature,omitempty"` // sampling temperature
	TopP        float64    `protobuf:"fixed64,4,opt,name=top_p,json=topP,proto3" json:"top_p,omitempty"`   // nucleus sampling
}

func (x *Request) Reset() {
	*x = Request{}
	mi := &file_pkg_proto_gpt_gpt_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Request) ProtoMessage() {}

func (x *Request) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_gpt_gpt_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Request.ProtoReflect.Descriptor instead.
func (*Request) Descriptor() ([]byte, []int) {
	return file_pkg_proto_gpt_gpt_proto_rawDescGZIP(), []int{1}
}

func (x *Request) GetModels() string {
	if x != nil {
		return x.Models
	}
	return ""
}

func (x *Request) GetMessages() []*Message {
	if x != nil {
		return x.Messages
	}
	return nil
}

func (x *Request) GetTemperature() float64 {
	if x != nil {
		return x.Temperature
	}
	return 0
}

func (x *Request) GetTopP() float64 {
	if x != nil {
		return x.TopP
	}
	return 0
}

// Response
type Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseCode uint64 `protobuf:"varint,2,opt,name=response_code,json=responseCode,proto3" json:"response_code,omitempty"` // response status code: 200, 439, etc. 204 for termination
	Body         *Body  `protobuf:"bytes,4,opt,name=body,proto3,oneof" json:"body,omitempty"`
}

func (x *Response) Reset() {
	*x = Response{}
	mi := &file_pkg_proto_gpt_gpt_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_gpt_gpt_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_pkg_proto_gpt_gpt_proto_rawDescGZIP(), []int{2}
}

func (x *Response) GetResponseCode() uint64 {
	if x != nil {
		return x.ResponseCode
	}
	return 0
}

func (x *Response) GetBody() *Body {
	if x != nil {
		return x.Body
	}
	return nil
}

type Body struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string          `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`         // e.g. chatcmpl-ANcM3OsoLf6AXJpO76pDoW7Ry68oc
	Object         string          `protobuf:"bytes,2,opt,name=object,proto3" json:"object,omitempty"` // e.g. chat.completion
	Time           uint64          `protobuf:"varint,3,opt,name=time,proto3" json:"time,omitempty"`    // UNIX timestamp
	MessageWarpper *MessageWarpper `protobuf:"bytes,4,opt,name=message_warpper,json=messageWarpper,proto3" json:"message_warpper,omitempty"`
	Unknown        *Unknown        `protobuf:"bytes,5,opt,name=unknown,proto3" json:"unknown,omitempty"`
}

func (x *Body) Reset() {
	*x = Body{}
	mi := &file_pkg_proto_gpt_gpt_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Body) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Body) ProtoMessage() {}

func (x *Body) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_gpt_gpt_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Body.ProtoReflect.Descriptor instead.
func (*Body) Descriptor() ([]byte, []int) {
	return file_pkg_proto_gpt_gpt_proto_rawDescGZIP(), []int{3}
}

func (x *Body) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Body) GetObject() string {
	if x != nil {
		return x.Object
	}
	return ""
}

func (x *Body) GetTime() uint64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *Body) GetMessageWarpper() *MessageWarpper {
	if x != nil {
		return x.MessageWarpper
	}
	return nil
}

func (x *Body) GetUnknown() *Unknown {
	if x != nil {
		return x.Unknown
	}
	return nil
}

type MessageWarpper struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Arg1    int64    `protobuf:"varint,1,opt,name=arg1,proto3" json:"arg1,omitempty"`      // possibly constant 1
	Message *Message `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"` // response message
}

func (x *MessageWarpper) Reset() {
	*x = MessageWarpper{}
	mi := &file_pkg_proto_gpt_gpt_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MessageWarpper) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageWarpper) ProtoMessage() {}

func (x *MessageWarpper) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_gpt_gpt_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageWarpper.ProtoReflect.Descriptor instead.
func (*MessageWarpper) Descriptor() ([]byte, []int) {
	return file_pkg_proto_gpt_gpt_proto_rawDescGZIP(), []int{4}
}

func (x *MessageWarpper) GetArg1() int64 {
	if x != nil {
		return x.Arg1
	}
	return 0
}

func (x *MessageWarpper) GetMessage() *Message {
	if x != nil {
		return x.Message
	}
	return nil
}

type Unknown struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Arg1 int64 `protobuf:"varint,1,opt,name=arg1,proto3" json:"arg1,omitempty"`
	Arg2 int64 `protobuf:"varint,2,opt,name=arg2,proto3" json:"arg2,omitempty"`
	Arg3 int64 `protobuf:"varint,3,opt,name=arg3,proto3" json:"arg3,omitempty"`
}

func (x *Unknown) Reset() {
	*x = Unknown{}
	mi := &file_pkg_proto_gpt_gpt_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Unknown) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Unknown) ProtoMessage() {}

func (x *Unknown) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_gpt_gpt_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Unknown.ProtoReflect.Descriptor instead.
func (*Unknown) Descriptor() ([]byte, []int) {
	return file_pkg_proto_gpt_gpt_proto_rawDescGZIP(), []int{5}
}

func (x *Unknown) GetArg1() int64 {
	if x != nil {
		return x.Arg1
	}
	return 0
}

func (x *Unknown) GetArg2() int64 {
	if x != nil {
		return x.Arg2
	}
	return 0
}

func (x *Unknown) GetArg3() int64 {
	if x != nil {
		return x.Arg3
	}
	return 0
}

var File_pkg_proto_gpt_gpt_proto protoreflect.FileDescriptor

var file_pkg_proto_gpt_gpt_proto_rawDesc = []byte{
	0x0a, 0x17, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x70, 0x74, 0x2f,
	0x67, 0x70, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x28, 0x72, 0x75, 0x6e, 0x74, 0x69,
	0x6d, 0x65, 0x2e, 0x61, 0x6f, 0x74, 0x2e, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x5f, 0x6c,
	0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x73, 0x2e,
	0x67, 0x70, 0x74, 0x22, 0x37, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x72, 0x6f,
	0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xa7, 0x01, 0x0a,
	0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73,
	0x12, 0x4d, 0x0a, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x31, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x6f, 0x74,
	0x2e, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x5f, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e,
	0x67, 0x2e, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x67, 0x70, 0x74, 0x2e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x12,
	0x20, 0x0a, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x12, 0x13, 0x0a, 0x05, 0x74, 0x6f, 0x70, 0x5f, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x04, 0x74, 0x6f, 0x70, 0x50, 0x22, 0x81, 0x01, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x47, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65,
	0x2e, 0x61, 0x6f, 0x74, 0x2e, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x5f, 0x6c, 0x65, 0x61,
	0x72, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x67, 0x70,
	0x74, 0x2e, 0x42, 0x6f, 0x64, 0x79, 0x48, 0x00, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x88, 0x01,
	0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x62, 0x6f, 0x64, 0x79, 0x22, 0xf2, 0x01, 0x0a, 0x04, 0x42,
	0x6f, 0x64, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12,
	0x61, 0x0a, 0x0f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x77, 0x61, 0x72, 0x70, 0x70,
	0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69,
	0x6d, 0x65, 0x2e, 0x61, 0x6f, 0x74, 0x2e, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x5f, 0x6c,
	0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x73, 0x2e,
	0x67, 0x70, 0x74, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x57, 0x61, 0x72, 0x70, 0x70,
	0x65, 0x72, 0x52, 0x0e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x57, 0x61, 0x72, 0x70, 0x70,
	0x65, 0x72, 0x12, 0x4b, 0x0a, 0x07, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x6f,
	0x74, 0x2e, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x5f, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69,
	0x6e, 0x67, 0x2e, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x67, 0x70, 0x74, 0x2e, 0x55,
	0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x52, 0x07, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x22,
	0x71, 0x0a, 0x0e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x57, 0x61, 0x72, 0x70, 0x70, 0x65,
	0x72, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x72, 0x67, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x61, 0x72, 0x67, 0x31, 0x12, 0x4b, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65,
	0x2e, 0x61, 0x6f, 0x74, 0x2e, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x5f, 0x6c, 0x65, 0x61,
	0x72, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x67, 0x70,
	0x74, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x22, 0x45, 0x0a, 0x07, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x12, 0x12, 0x0a,
	0x04, 0x61, 0x72, 0x67, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x61, 0x72, 0x67,
	0x31, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x72, 0x67, 0x32, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x61, 0x72, 0x67, 0x32, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x72, 0x67, 0x33, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x04, 0x61, 0x72, 0x67, 0x33, 0x32, 0x85, 0x02, 0x0a, 0x13, 0x47, 0x50,
	0x54, 0x49, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x70, 0x0a, 0x07, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x12, 0x31, 0x2e, 0x72,
	0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x6f, 0x74, 0x2e, 0x6d, 0x61, 0x63, 0x68, 0x69,
	0x6e, 0x65, 0x5f, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x73, 0x2e, 0x67, 0x70, 0x74, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x32, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x6f, 0x74, 0x2e, 0x6d, 0x61,
	0x63, 0x68, 0x69, 0x6e, 0x65, 0x5f, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x67, 0x70, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x7c, 0x0a, 0x11, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x57, 0x69,
	0x74, 0x68, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x31, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69,
	0x6d, 0x65, 0x2e, 0x61, 0x6f, 0x74, 0x2e, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x5f, 0x6c,
	0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x73, 0x2e,
	0x67, 0x70, 0x74, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x72, 0x75,
	0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x6f, 0x74, 0x2e, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e,
	0x65, 0x5f, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x73, 0x2e, 0x67, 0x70, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x30,
	0x01, 0x42, 0x0f, 0x5a, 0x0d, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67,
	0x70, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pkg_proto_gpt_gpt_proto_rawDescOnce sync.Once
	file_pkg_proto_gpt_gpt_proto_rawDescData = file_pkg_proto_gpt_gpt_proto_rawDesc
)

func file_pkg_proto_gpt_gpt_proto_rawDescGZIP() []byte {
	file_pkg_proto_gpt_gpt_proto_rawDescOnce.Do(func() {
		file_pkg_proto_gpt_gpt_proto_rawDescData = protoimpl.X.CompressGZIP(file_pkg_proto_gpt_gpt_proto_rawDescData)
	})
	return file_pkg_proto_gpt_gpt_proto_rawDescData
}

var file_pkg_proto_gpt_gpt_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_pkg_proto_gpt_gpt_proto_goTypes = []any{
	(*Message)(nil),        // 0: runtime.aot.machine_learning.parents.gpt.Message
	(*Request)(nil),        // 1: runtime.aot.machine_learning.parents.gpt.Request
	(*Response)(nil),       // 2: runtime.aot.machine_learning.parents.gpt.Response
	(*Body)(nil),           // 3: runtime.aot.machine_learning.parents.gpt.Body
	(*MessageWarpper)(nil), // 4: runtime.aot.machine_learning.parents.gpt.MessageWarpper
	(*Unknown)(nil),        // 5: runtime.aot.machine_learning.parents.gpt.Unknown
}
var file_pkg_proto_gpt_gpt_proto_depIdxs = []int32{
	0, // 0: runtime.aot.machine_learning.parents.gpt.Request.messages:type_name -> runtime.aot.machine_learning.parents.gpt.Message
	3, // 1: runtime.aot.machine_learning.parents.gpt.Response.body:type_name -> runtime.aot.machine_learning.parents.gpt.Body
	4, // 2: runtime.aot.machine_learning.parents.gpt.Body.message_warpper:type_name -> runtime.aot.machine_learning.parents.gpt.MessageWarpper
	5, // 3: runtime.aot.machine_learning.parents.gpt.Body.unknown:type_name -> runtime.aot.machine_learning.parents.gpt.Unknown
	0, // 4: runtime.aot.machine_learning.parents.gpt.MessageWarpper.message:type_name -> runtime.aot.machine_learning.parents.gpt.Message
	1, // 5: runtime.aot.machine_learning.parents.gpt.GPTInferenceService.Predict:input_type -> runtime.aot.machine_learning.parents.gpt.Request
	1, // 6: runtime.aot.machine_learning.parents.gpt.GPTInferenceService.PredictWithStream:input_type -> runtime.aot.machine_learning.parents.gpt.Request
	2, // 7: runtime.aot.machine_learning.parents.gpt.GPTInferenceService.Predict:output_type -> runtime.aot.machine_learning.parents.gpt.Response
	2, // 8: runtime.aot.machine_learning.parents.gpt.GPTInferenceService.PredictWithStream:output_type -> runtime.aot.machine_learning.parents.gpt.Response
	7, // [7:9] is the sub-list for method output_type
	5, // [5:7] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_pkg_proto_gpt_gpt_proto_init() }
func file_pkg_proto_gpt_gpt_proto_init() {
	if File_pkg_proto_gpt_gpt_proto != nil {
		return
	}
	file_pkg_proto_gpt_gpt_proto_msgTypes[2].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pkg_proto_gpt_gpt_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pkg_proto_gpt_gpt_proto_goTypes,
		DependencyIndexes: file_pkg_proto_gpt_gpt_proto_depIdxs,
		MessageInfos:      file_pkg_proto_gpt_gpt_proto_msgTypes,
	}.Build()
	File_pkg_proto_gpt_gpt_proto = out.File
	file_pkg_proto_gpt_gpt_proto_rawDesc = nil
	file_pkg_proto_gpt_gpt_proto_goTypes = nil
	file_pkg_proto_gpt_gpt_proto_depIdxs = nil
}
